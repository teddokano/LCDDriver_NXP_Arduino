#!/usr/bin/env python3

def main():
	char_list	= [ None ] * 128
	
	for k, v in CHAR_PATTERN.items():
		char_list[ ord( k ) ]	= v

	for i, char in enumerate( char_list ):
		if char:
			print( "0x{:04X}, // '{}'  @{:3d} (0x{:02X})".format( char, chr( i ), i, i ) )
		else:
			print( "0x0000, // None @{:3d} (0x{:02X})".format( i, i ) )

#	data from https://github.com/teddokano/mikan/blob/main/nxp_periph/LCD_driver.py
CHAR_PATTERN	= {
					" ": 0b_0000_0000_0000_0000,
					"A": 0b_0000_0111_1101_0100,
					#	"B": 0b_0011_0001_1011_0100,
					#	"B": 0b_0000_1001_1001_1000,
					"B": 0b_0001_0111_1011_0100,
					"C": 0b_0001_0001_0001_0100,
					"D": 0b_1001_0100_0100_0110,
					"E": 0b_0001_0011_1001_0100,
					"F": 0b_0000_0011_1001_0100,
					"G": 0b_0001_0111_0001_0100,
					"H": 0b_0000_0111_1101_0000,
					"I": 0b_1001_0000_0000_0110,
					"J": 0b_0001_0101_0100_0000,
					"K": 0b_0010_0001_1011_0000,
					"L": 0b_0001_0001_0001_0000,
					"M": 0b_0000_0101_0111_1000,
					"N": 0b_0010_0101_0101_1000,
					"O": 0b_0001_0101_0101_0100,
					"P": 0b_0000_0011_1101_0100,
					"Q": 0b_0011_0101_0101_0100,
					"R": 0b_0010_0011_1101_0100,
					"S": 0b_0001_0110_1001_0100,
					"T": 0b_1000_0000_0000_0110,
					"U": 0b_0001_0101_0101_0000,
					"V": 0b_0000_1001_0011_0000,
					"W": 0b_0010_1101_0101_0000,
					"X": 0b_0010_1000_0010_1000,
					"Y": 0b_1000_0000_0010_1000,
					"Z": 0b_0001_1000_0010_0100,
					"0": 0b_0001_1101_0111_0100,
					"1": 0b_0000_0100_0100_0000,
					"2": 0b_0001_0011_1100_0100,
					"3": 0b_0001_0110_1100_0100,
					"4": 0b_0000_0110_1101_0000,
					"5": 0b_0001_0110_1001_0100,
					"6": 0b_0001_0111_1001_0100,
					"7": 0b_0000_0100_0100_0100,
					"8": 0b_0001_0111_1101_0100,
					"9": 0b_0001_0110_1101_0100,
					".": 0b_0100_0000_0000_0000,
					"'": 0b_0100_0000_0000_0001,
					"+": 0b_1000_0010_1000_0010,
					"-": 0b_0000_0010_1000_0000,
					"*": 0b_0010_1010_1010_1000,
					"|": 0b_1000_0000_0000_0010,
					"/": 0b_0000_1000_0010_0000,
					"\\": 0b_0010_0000_0000_1000,
					}

if __name__ == "__main__":
	main()
